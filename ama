#!/usr/bin/env python3

import argparse
import os
import time

import openai


def request_openapi(input_text, prefix=""):
    openai.api_key = os.environ.get("OPENAI_API_KEY")
    model_engine = "text-davinci-003"

    prompt = f"{prefix}{input_text}"
    response = openai.Completion.create(
        engine=model_engine,
        prompt=prompt,
        max_tokens=2048,
        temperature=0.5
    )

    if response:
        response_text = response.choices[0].text
        print("Response:")
        for char in response_text:
            print(char, end='', flush=True)
            time.sleep(0.005)
        print()
    else:
        print(f"Request failed with status code: {str(response.status_code)}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-q", "--question", help="Question to answer")

    # Add a flag for retry
    parser.add_argument(
        "-r", "--retry", help="Retry asking the same question", action="store_true")

    args = parser.parse_args()

    # Error out if question is not provided
    if not args.question:
        print("Provide a question")
        exit(1)
    else:
        question = args.question

    if args.retry:
        request_openapi(question, "Retry Again... ")
    else:
        request_openapi(question)
